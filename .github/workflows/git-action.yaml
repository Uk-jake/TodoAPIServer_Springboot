# 워크플로우 이름 정의
name: spring-app

# 워크플로우 트리거 설정
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# 필요한 권한 설정
permissions:
  id-token: write
  contents: read

# 전역 환경 변수 설정
env:
  AWS_REGION: ap-northeast-2
  ECS_SERVICE: todo-app-service-03
  ECS_CLUSTER: todo-app-cluster-01
  ECS_TASK_DEFINITION: ./task-definition.json
  CONTAINER_NAME: todo

jobs:
  # Docker 이미지를 빌드하고 푸시하는 작업 정의
  build-docker-image:
    runs-on: ubuntu-latest

    steps:
      # 소스 코드 가져오기
      - uses: actions/checkout@v3

      # JDK 설치 단계
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Java Build 단계 (Gradle 사용)
      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: clean bootJar

      # Docker 이미지 빌드 및 Private Registry 푸시
      - name: build and release to Private Registry
        env:
          NAME: ${{ secrets.REGISTRY_DOMAIN }}
          REPO: todo
        run: |
          docker build -t $REPO .
          docker tag $REPO:latest $NAME/$REPO:latest
          docker push $NAME/$REPO:latest
          echo "IMAGE_URI=$NAME/$REPO:latest" >> $GITHUB_ENV  # 이미지 URI를 환경 변수로 설정

      # AWS Credential Login
      - name: AWS ECR Credential
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::058264293778:role/awsLogin_githubAction
          role-session-name: sampleSessionName
          aws-region: ap-northeast-2

      # 새로운 이미지 ID를 사용해 Amazon ECS 태스크 정의를 업데이트
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@c804dfbdd57f713b6c079302a4c01db7017a36fc
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ env.IMAGE_URI }}  # 새로 빌드된 이미지의 URI 사용

      # Amazon ECS 서비스 배포
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@df9643053eda01f169e64a0e60233aacca83799a
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
